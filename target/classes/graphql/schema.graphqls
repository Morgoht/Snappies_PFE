type Query {
    userById(userId:ID!):User
    allUsers:[User]

    allArticles:[Article]
    articleById(articleId:ID!):Article

    allDaycares:[Daycare]
    daycareById(daycareId:ID!):Daycare

    allOrders:[Order]
    orderById(orderId: ID!): Order

    allOrderLines: [OrderLine]
    orderLineById(orderLineId: ID!): OrderLine

    allDeliveryRounds: [DeliveryRound]
    deliveryRoundById(deliveryRoundId:ID!):DeliveryRound

    allDeliveries: [Delivery]
    deliveryById(deliveryId: ID!):Delivery
}
type Mutation {
    createUser(name: String!, lastname: String!, username: String!, email: String!, password: String!): User
    updateUser(user: UserEditInput): User
    deleteUser(userId: ID): String

    createArticle(article: ArticleInput): Article
    updateArticle(article: ArticleEditInput): Article
    deleteArticle(documentId: ID!): String

    createDaycare(daycare: DaycareInput): Daycare
    updateDaycare(daycare: DaycareEditInput): Daycare
    deleteDaycare(documentId: ID!): String

    createOrder(daycareId: ID!): Order
    updateOrder(orderId: ID!, daycareId: ID!): Order
    deleteOrder(documentId: ID!): String
    addOrderLine(documentId: ID!, articleId: ID!, quantity: Int): OrderLine
    removeOrderLine(documentId: ID!,orderLineId:ID!):OrderLine

    createOrderLine(articleId: ID!, quantity: Int!): OrderLine
    updateOrderLine(orderLineId: ID!articleId: ID, quantity: Int): OrderLine
    deleteOrderLine(documentId: ID!): String

    createDelivery(orderId: ID!, driverId: ID!): Delivery
    updateDelivery(orderId: ID, driverId: ID): Delivery!
    deleteDelivery(documentId: ID!): String

    createDeliveryRound(name: String, deliveries:[DeliveryInput]): DeliveryRound
    updateDeliveryRound(name: String, deliveries:[DeliveryInput],roundEnded: Boolean): DeliveryRound
    deleteDeliveryRound(documentId: ID!): String
    addDelivery(documentId: ID!, deliveryInput: DeliveryInput!): Delivery


}

